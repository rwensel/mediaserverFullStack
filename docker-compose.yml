version: "3.7"
services:

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pi.<obscured>.net
    environment:
      WEBPASSWORD: ${WEBPASSWORD}
      FTLCONF_LOCAL_IPV4: ${FTLCONF_LOCAL_IPV4}
      IPv6: "false"
      DNSMASQ_LISTENING: all
    mac_address: ${MAC_ADDRESS}
    networks:
      frontend:
        ipv4_address: <obscured>
      backend:
        ipv4_address: 172.18.0.2
    dns:
      - 127.0.0.1
      - 1.1.1.1
    labels:
      flame.name: pihole
      flame.type: application
      flame.url: http://<obscured>
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /<obscured>/<obscured>/pihole/etc-pihole:/etc/pihole
      - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
      - /<obscured>/<obscured>/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    ports:
      - '80:80'
      - '443:443'
      - '53:53/udp'
      - '53:53/tcp'
      
   npm:
     image: jc21/nginx-proxy-manager:latest
     container_name: npm
     hostname: npm
     environment:
       SSL_CERT_FILE: ${SSL_CERT_FILE}
       CURL_CA_BUNDLE: ${CURL_CA_BUNDLE}
       DISABLE_IPV6: 'true'
     labels:
       flame.type: application
       flame.name: npm
       flame.url: npm.<obscured>.lan
     volumes:
       - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
       - /<obscured>/<obscured>/nginx:/data
       - /etc/localtime:/etc/localtime:ro
       - /var/run/docker.sock:/tmp/docker.sock
     networks:
       frontend:
         ipv4_address: <obscured>
     ports:
       - '80:80'
       - '81:81'
       - '443:443'
     restart: always
  
  flame:
    image: pawelmalak/flame:latest
    container_name: flame
    hostname: flame.<obscured>.net
    environment:
      PASSWORD: ${PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /<obscured>/<obscured>/flame:/app/data
      - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '5005:5005'
    networks:
      backend:
        ipv4_address: 172.18.0.4
    dns:
      - 172.18.0.2
    restart: always
  
  website:
      image: mysite
      container_name: mysite
      hostname: mysite.<obscured>.net
      labels:
        flame.type: application
        flame.name: mysite
        flame.url: mysite.nas.<obscured>.net
      volumes:
        - /<obscured>/<obscured>/media/staticfiles:/staticfiles
        - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
        - /etc/localtime:/etc/localtime:ro
      networks:
        backend:
          ipv4_address: 172.18.0.5
      dns:
      - 172.18.0.2
      ports:
        - "8005:8005"
      restart: always
      
  portainer:
    image: portainer/portainer-ce:latest
    container_name: "portainer"
    hostname: port.<obscured>.net
    entrypoint: /portainer
    labels:
      flame.type: application
      flame.name: portainer
      flame.url: port.nas.<obscured>.net
    volumes:
      - /<obscured>/<obscured>/portainer:/data
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /<obscured>/<obscured>/letsencrypt:/etc/
    networks:
      backend:
        ipv4_address: 172.18.0.3
    dns:
      - 172.18.0.2
    ports:
      - '8000:8000'
      - '9000:9000'
      - '9443:9443'
    restart: always
    
  plex:
    image: linuxserver/plex:latest
    container_name: plex
    hostname: plex.<obscured>.net
    privileged: true
    devices:
      - /dev/dri:/dev/dri
      - /dev/dri/renderD128:/dev/dri/renderD128
    labels:
      flame.name: plex
      flame.type: application
      flame.url: plex.nas.<obscured>.net
    environment:
      PLEX_CLAIM: ${PLEX_CLAIM}
      ADVERTISE_IP: ${ADVERTISE_IP}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /<obscured>/<obscured>/plex:/config
      - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
      - /<obscured>/<obscured>/media/series:/storage/media/series
      - /<obscured>/<obscured>/media/movies:/storage/media/movies
      - /<obscured>/<obscured>/media/music:/storage/media/music
    networks:
      backend:
        ipv4_address: 172.18.0.6
    dns:
      - 172.18.0.2
    ports:
      - 32400:32400

    restart: always
  
  ombi:
    image: linuxserver/ombi:latest
    container_name: ombi
    hostname: ombi.<obscured>.net
    environment:
      BASE_URL: /ombi
    labels:
      flame.name: ombi
      flame.type: application
      flame.url: ombi.nas.<obscured>.net
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /<obscured>/<obscured>/ombi:/config
      - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
    networks:
      backend:
        ipv4_address: 172.18.0.7
    dns:
      - 172.18.0.2
    ports:
      - '3579:3579'
    restart: always
  
  nzbget:
      image: linuxserver/nzbget:latest
      container_name: nzbget
      hostname: nzbget.<obscured>.net
      labels:
        flame.type: application
        flame.name: nzbget
        flame.url: nzbget.nas.<obscured>.net
      volumes:
        - /etc/localtime:/etc/localtime:ro
        - /<obscured>/<obscured>/nzbget:/config
        - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
        - /<obscured>/<obscured>/downloads/usenet:/storage/downloads/usenet
      networks:
        backend:
          ipv4_address: 172.18.0.8
      dns:
      - 172.18.0.2
      ports:
        - '6789:6789'
      restart: always
  
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr.<obscured>.net
    labels:
      flame.type: application
      flame.name: sonarr
      flame.url: sonarr.nas.<obscured>.net
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /<obscured>/<obscured>/sonarr:/config
      - /<obscured>/<obscured>/media/series:/storage/series
      - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
      - /<obscured>/<obscured>/downloads/usenet/complete/series:/storage/downloads/usenet/complete/series
    networks:
      backend:
        ipv4_address: 172.18.0.9
    dns:
      - 172.18.0.2
    ports:
      - '8989:8989'
    restart: always
  
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr.<obscured>.net
    labels:
      flame.type: application
      flame.name: radarr
      flame.url: radarr.nas.<obscured>.net
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /<obscured>/<obscured>/radarr:/config
      - /<obscured>/<obscured>/media/movies:/storage/movies
      - /<obscured>/<obscured>/downloads/usenet/complete/movies:/storage/downloads/usenet/complete/movies
    networks:
      backend:
        ipv4_address: 172.18.0.10
    dns:
      - 172.18.0.2
    ports:
      - '7878:7878'
    restart: always
  
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr.<obscured>.net
    labels:
      flame.type: application
      flame.name: lidarr
      flame.url: lidarr.nas.<obscured>.net
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /<obscured>/<obscured>/lidarr:/config
      - /<obscured>/<obscured>/media/music:/storage/music
      - /<obscured>/<obscured>/letsencrypt:/etc/letsencrypt
      - /<obscured>/<obscured>/downloads/usenet/complete/music:/storage/downloads/usenet/complete/music
    networks:
      backend:
        ipv4_address: 172.18.0.11
    dns:
      - 172.18.0.2
    ports:
      - '8686:8686'
    restart: always
    
networks:
  frontend:
    external:
      name: macvlan-br0
  backend:
    external:
      name: stack